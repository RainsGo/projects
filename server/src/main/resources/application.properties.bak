# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.com.smart = DEBUG
logging.level.org.springframework.web = DEBUG
#logging.file = /var/netgloo_blog/logs/spring-boot-logging.log

#数据库连接信息
spring.datasource.username=sampleDs
spring.datasource.url=jdbc:mysql://172.17.0.2:3306/sampledb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-username=com.mysql.jdbc.Driver

#自定义连接池
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource

#连接池配置信息
spring.datasource.max-wait=10000
spring.datasource.max-active=50
spring.datasource.max-idle=10
spring.datasource.min-idle=10
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=select 1

#JNDI数据源配置
#spring.datasource.jndi-username=java:comp/env/jdbc/sampleDs

#初始化数据脚本
#spring.datasource.initialize=true
#spring.datasource.platform=mysql
#spring.datasource.data=data
#spring.datasource.schema=schema

##################
# Config Undertow
##################
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
server.undertow.io-threads=4
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.worker-threads=20
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true

#management.health.db.enabled=true
#management.health.defaults.enabled=true
#management.health.diskspace.enabled=true
#management.health.diskspace.path=D:/masterSpring/code
#management.health.diskspace.threshold=0

###################
# MyBatis
###################
#mybatis.type-aliases-package=com.rain.projects.server.domain
#spring.datasource.schema=classpath:import.sql
#mybatis.config-location=classpath:mybatis-config.xml
