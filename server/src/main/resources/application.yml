
#配置日志
logging:
  config:classpath:log4j2.yml

# 配置 Server
server:
  # 配置 Undertow
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
    buffers-per-region: 1024
    # 是否分配的直接内存
    direct-buffers: true

#配置 Spring
spring:
  jackson:
      serialization:
        indent_output: true

  datasource:
      driver-class-username: com.mysql.jdbc.Driver
      url: jdbc:mysql://172.17.0.2:3306/sampledb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: 123456
      initialize: true
      platform: mysql
      #data: data
      schema: classpath:dbmysql-init.sql


#配置mybatis
mybatis:
  type-aliases-package: com.rain.projects.server.user.dao
  #, com.rain.projects.server.log.dao
#  mapper-locations: classpath:mapper/*Mapper.xml
#  config-location: classpath:mybatis-config.xml

# JWT
jwt:
  header: Authorization
  secret: mySecret
  tokenHead: "Bearer"
  access_expiration: 604800
  refresh_expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh
      register: "auth/register"
